{"ast":null,"code":"var _jsxFileName = \"/Users/daana/Projects/a_toxic_rep/client/src/components/ModerationTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Table } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useSortableData = (items, config = null) => {\n  _s();\n\n  const [sortConfig, setSortConfig] = React.useState(config);\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...items];\n\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n\n        return 0;\n      });\n    }\n\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = key => {\n    let direction = 'ascending';\n\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  return {\n    items: sortedItems,\n    requestSort,\n    sortConfig\n  };\n};\n\n_s(useSortableData, \"RK+7Z8/M5Gu9u9DrSbX+5MpLDnQ=\");\n\nconst ModerationTable = props => {\n  _s2();\n\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSortableData(props.comments);\n\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: [\"\\u0414\\u0430\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => requestSort('date'),\n            className: getClassNamesFor('date'),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              fill: \"currentColor\",\n              className: \"bi bi-caret-down-fill\",\n              viewBox: \"0 0 16 16\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => requestSort('comment'),\n            className: getClassNamesFor('comment'),\n            children: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => requestSort('user'),\n            className: getClassNamesFor('user'),\n            children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: items.map(line => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: line.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: line.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: line.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, line.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ModerationTable, \"PSo/US/k7oxWT26DPU+y7juhpag=\", false, function () {\n  return [useSortableData];\n});\n\n_c = ModerationTable;\nexport default ModerationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModerationTable\");","map":{"version":3,"sources":["/Users/daana/Projects/a_toxic_rep/client/src/components/ModerationTable.js"],"names":["React","Button","Table","useSortableData","items","config","sortConfig","setSortConfig","useState","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","requestSort","ModerationTable","props","comments","getClassNamesFor","name","undefined","map","line","date","comment","user","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, Table} from \"react-bootstrap\";\n\n\nconst useSortableData = (items, config = null) => {\n    const [sortConfig, setSortConfig] = React.useState(config);\n\n    const sortedItems = React.useMemo(() => {\n        let sortableItems = [...items];\n        if (sortConfig !== null) {\n            sortableItems.sort((a, b) => {\n                if (a[sortConfig.key] < b[sortConfig.key]) {\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\n                }\n                if (a[sortConfig.key] > b[sortConfig.key]) {\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\n                }\n                return 0;\n            });\n        }\n        return sortableItems;\n    }, [items, sortConfig]);\n\n    const requestSort = (key) => {\n        let direction = 'ascending';\n        if (\n            sortConfig &&\n            sortConfig.key === key &&\n            sortConfig.direction === 'ascending'\n        ) {\n            direction = 'descending';\n        }\n        setSortConfig({ key, direction });\n    };\n\n    return { items: sortedItems, requestSort, sortConfig };\n};\n\nconst ModerationTable = (props) => {\n    const { items, requestSort, sortConfig } = useSortableData(props.comments);\n    const getClassNamesFor = (name) => {\n        if (!sortConfig) {\n            return;\n        }\n        return sortConfig.key === name ? sortConfig.direction : undefined;\n    };\n    return (\n        <Table>\n            <thead>\n            <tr>\n                <th>\n                    Дата\n                    <Button\n                        type=\"button\"\n                        onClick={() => requestSort('date')}\n                        className={getClassNamesFor('date')}\n                    >\n\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                             className=\"bi bi-caret-down-fill\" viewBox=\"0 0 16 16\">\n                            <path\n                                d=\"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/>\n                        </svg>\n                    </Button>\n                </th>\n                <th>\n                    <Button\n                        type=\"button\"\n                        onClick={() => requestSort('comment')}\n                        className={getClassNamesFor('comment')}\n                    >\n                        Комментарий\n                    </Button>\n                </th>\n                <th>\n                    <Button\n                        type=\"button\"\n                        onClick={() => requestSort('user')}\n                        className={getClassNamesFor('user')}\n                    >\n                        Пользователь\n                    </Button>\n                </th>\n            </tr>\n            </thead>\n            <tbody>\n            {items.map((line) => (\n                <tr key={line.id}>\n                    <td>{line.date}</td>\n                    <td>{line.comment}</td>\n                    <td>{line.user}</td>\n                </tr>\n            ))}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default ModerationTable;\n"]},"metadata":{},"sourceType":"module"}